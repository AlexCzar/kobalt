To do:

- ProjectGenerator: support migration from pom.xml (starting with dependencies)
- Generate .idea and other IDEA files
- Make files appear in download list automatically on bintray (undocumented API)
- logs for users should not show any timestamp, class file or thread id, this should only be in --dev mode
- Project ordering: kotlinProject(wrapper) {}
- Fetch .pom with DynamicGraph
- Centralize all the executors
- Compile TestNG (including generating Version.java and OSGi headers)
- Storage API: Plugins.storage("myplugin").get/set()
- Support additional .kt files in ~/.kobalt/src
- generateArchive() should use Path instead of File
- --init: import dependencies from build.gradle
- uploadMaven
  + Create sources.jar
  + Create javadoc.jar
- Bug: --tasks displays multiple tasks when there are multiple projects
- Bug: ./kobaltw --dryRun kobalt:uploadJcenter runs "kobalt-wrapper:clean" twice
- Replace File with java.nio.Files and Path
- Create a wiki page for plugins
- Make kobaltw executable in the zip file
- --resolve <dep>

Done:

- Link kobalt to JCenter
- --update
- Support .pom pointing to other deps (and no jars)
- provided scope
- --dryRun
- --init: import dependencies from pom.xml
- --checkVersions: displays which plugins have a newer version than the one specified in the build
- Make it possible to target jar for individual projects: ./kobaltw kobalt:uploadJcenter
- --buildFile doesn't use the local .kobalt directory
- Better plugin() parsing
- kobalt-wrapper.jar contains too much stuff, should be just com.beust.kobalt.wrapper.* + kotlin runtime or maybe
just a straight Java class with minimal dependencies for fast start up
- Add repos from the build file
- Support tasks added in the build file
- Replace "removePrefixes" with an overloaded include(prefix, file)
- --init: Don't overwrite existing file
- Handle snapshots/metadata: https://repository.jboss.org/nexus/content/repositories/root_repository//commons-lang/commons-lang/2.7-SNAPSHOT/commons-lang-2.7-SNAPSHOT.jar
- JUnit
- Compiler nowarn section
- Parse plugins and repos in build files
- Stop always recompiling preBuildScript.jar
- Upload non maven files
- Jar packaging: include the jar in the jar (not supported by JarFile)
- Encapsulate BuildFile for better log messages


